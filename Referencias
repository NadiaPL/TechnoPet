https://github.com/fivdi/pigpio#measure-distance-with-a-hc-sr04-ultrasonic-sensor
http://www.instructables.com/id/Servo-Motor-Control-With-Raspberry-Pi/


char estado = 'X';
// the setup routine runs once when you press reset:
void setup() {
  pinMode(13, OUTPUT);
  // initialize serial communication at 9600 bits per second:
  Serial.begin(9600);
  
}

// the loop routine runs over and over again forever:
void loop() {
 if(Serial.available()>0){           // Si el puerto serie esta habilitadp 
        estado = Serial.read();      // Lee lo que llega por el puerto Serie
 }

 switch (estado) {
    case 'V':
           Serial.print("encendido"); // envía "Hello World!".
           digitalWrite(13, HIGH);   // turn the LED on (HIGH is the voltage level)
           //delay(1000);                       // wait for a second
      break;
      
    case 'U':
           Serial.print("apagado"); // envía "Hello World!".
           digitalWrite(13, LOW);    // turn the LED off by making the voltage LOW
           delay(1000);                       // wait for a second
      break;
   
   default: 
            Serial.print("apagadoxxxxxxxxxxxx"); // envía "Hello World!".
           digitalWrite(LED_BUILTIN, LOW);    // turn the LED off by making the voltage LOW
           delay(1000);   
    break;
  }
}



//Ultra

const int Trigger = 2;          //Pin digital 2 para el Trigger del sensor
const int Echo    = 3;          //Pin digital 3 para el Echo del sensor
int LED           = 13;

void setup() 
{
  Serial.begin(9600);           //iniciailzamos la comunicación
  pinMode(Trigger, OUTPUT);     //pin como salida
  pinMode(Echo, INPUT);         //pin como entrada
  digitalWrite(Trigger, LOW);   //Inicializamos el pin con 0
  digitalWrite(LED, INPUT);
}

void loop()
{
  long t;                       //timepo que demora en llegar el eco
  long d;                       //distancia en centimetros

  digitalWrite(Trigger, HIGH);
  delayMicroseconds(10);        //Enviamos un pulso de 10us
  digitalWrite(Trigger, LOW);
  
  t = pulseIn(Echo, HIGH);      //obtenemos el ancho del pulso
  d = t/59;                     //escalamos el tiempo a una distancia en cm

  Serial.print("Distancia: ");
  Serial.print(d);              //Enviamos serialmente el valor de la distancia
  Serial.print("cm");
  Serial.println();
  delay(100);                   //Hacemos una pausa de 100ms
  
  if (d <= 60)
  {
      digitalWrite(LED, HIGH);
  }
  else if (d > 60)
  {
    digitalWrite(LED, LOW);
  }

}



//Ultra y servo
#include <Servo.h>

Servo myservo;  // create servo object to control a servo

const int Trigger = 2;          //Pin digital 2 para el Trigger del sensor
const int Echo    = 3;          //Pin digital 3 para el Echo del sensor
int LED           = 13;
int pos = 0;


void setup() 
{
  Serial.begin(9600);           //iniciailzamos la comunicación
  pinMode(Trigger, OUTPUT);     //pin como salida
  pinMode(Echo, INPUT);         //pin como entrada
  pinMode(LED, OUTPUT);
  digitalWrite(Trigger, LOW);   //Inicializamos el pin con 0
  digitalWrite(LED, INPUT);
  myservo.attach(9);  // attaches the servo on pin 9 to the servo object
}

void loop()
{
  long t;                       //timepo que demora en llegar el eco
  long d;                       //distancia en centimetros

  digitalWrite(Trigger, HIGH);
  delayMicroseconds(10);        //Enviamos un pulso de 10us
  digitalWrite(Trigger, LOW);
  
  t = pulseIn(Echo, HIGH);      //obtenemos el ancho del pulso
  d = t/59;                     //escalamos el tiempo a una distancia en cm

  Serial.print("Distancia: ");
  Serial.print(d);              //Enviamos serialmente el valor de la distancia
  Serial.print("cm");
  Serial.println();
  delay(100);                   //Hacemos una pausa de 100ms
  
  if (d <= 60)
  {
      digitalWrite(LED, HIGH);
      for (pos = 0; pos <= 280; pos += 1) { 
      myservo.write(pos);              // tell servo to go to position in variable 'pos'
      delay(15);
       }
  }
  else if (d > 60)
  {
    digitalWrite(LED, LOW);
    for (pos = 280; pos >= 0; pos -= 1) { 
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(15); 
    }
  }
